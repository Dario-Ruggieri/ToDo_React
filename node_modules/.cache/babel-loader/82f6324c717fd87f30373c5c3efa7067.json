{"ast":null,"code":"var _jsxFileName = \"/home/dario/Scrivania/tmp/todo_react_blog/src/App.js\";\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  // In tasklist scandiamo ogni elemento dell'array tasks (passato dall'index.js) e su ogni elemento\n  // task chiamiamo il compopnente todo a cui passiamo per ogni task nome, id e assegnamo una chiave\n  //(richiesta da React) ad ogni task. Il map è un po' come fosse l'each che abbiamo visto in Svelte\n  const taskList = props.tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todo","Form","App","props","taskList","tasks","map","task","id","name"],"sources":["/home/dario/Scrivania/tmp/todo_react_blog/src/App.js"],"sourcesContent":["import Todo from './components/Todo';\nimport Form from './components/Form';\n\n\nfunction App(props) {\n  // In tasklist scandiamo ogni elemento dell'array tasks (passato dall'index.js) e su ogni elemento\n  // task chiamiamo il compopnente todo a cui passiamo per ogni task nome, id e assegnamo una chiave\n  //(richiesta da React) ad ogni task. Il map è un po' come fosse l'each che abbiamo visto in Svelte\n  const taskList = props.tasks.map((task) => <Todo id={task.id} name={task.name} key={task.id}/>);\n  return (\n    <div className=\"App\">\n      <h1>ToDo List React</h1>\n      <Form />      \n      <ul>\n        {taskList}\n        {/* <Todo name=\"Studiare Latino\" id=\"todo-0\"/>\n        <Todo name=\"Studiare Matematica\"id=\"todo-1\"/>\n        <Todo name=\"Creare una Todo in React\" id=\"todo-2\"/> */}\n        {/* <li>Studiare Matematica</li> */}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAGrC,SAASC,GAAG,CAACC,KAAK,EAAE;EAClB;EACA;EACA;EACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAAK,QAAC,IAAI;IAAC,EAAE,EAAEA,IAAI,CAACC,EAAG;IAAC,IAAI,EAAED,IAAI,CAACE;EAAK,GAAMF,IAAI,CAACC,EAAE;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EAC/F,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACR;MAAA,UACGJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAKN;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,KAlBQF,GAAG;AAoBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}