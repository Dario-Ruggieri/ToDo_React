{"ast":null,"code":"var _jsxFileName = \"/home/dario/Scrivania/tmp/todo_react_blog/src/components/Form.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  function handleSubmit(e) {\n    e.preventDefault();\n    alert('Hello, world!');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Form","handleSubmit","e","preventDefault","alert"],"sources":["/home/dario/Scrivania/tmp/todo_react_blog/src/components/Form.js"],"sourcesContent":["import React from \"react\";\n\nfunction Form(){\n    function handleSubmit(e) {\n        e.preventDefault();\n        alert('Hello, world!');\n      }\n    return(\n        <form>\n            <h2>\n                What needs to be done?\n            </h2>\n            <input type=\"text\" placeholder=\"Add a new ToDo\"></input>\n            <button type=\"submit\" onClick={handleSubmit}>Add</button> \n            {/* Nel momento in cui clicco il bottone ho un evento, che mi \n            andrà a cambiare un altro componente:App\n            Non è però possibile passare dati da un child ad un parent (cosa che\n            invece è possibile da parent a child), come in questo\n            caso. Possiamo però scrivere una funzione nel componente App in modo tale\n            che si aspetti dei dati da Form. Passiamo quindi questa funzione come prop\n            a Form */}\n        </form>\n    )\n}\nexport default Form;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,IAAI,GAAE;EACX,SAASC,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAC,eAAe,CAAC;EACxB;EACF,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEK,eACL;MAAO,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS,eACxD;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEH,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QAQtD;AAEf;AAAC,KArBQD,IAAI;AAsBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}